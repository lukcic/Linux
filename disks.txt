lsscsi - lists scsi devices
lsblk -list block devices (disks with partitions)
lsusb -list connected USB devices
lspci -list PCI devices
-v -driver details (-vv too)
______________________________________________________________________________________________________________

du -h [DIRECTORY] -disk usage of files in directory in readable format
-a -disk usage of all files & dirs  in directory
-c -total disk usage of dirs in directory
-s -summary disk usage of directory
-m -disk usage  in MB
--exclude="*text*" - excludes text
--time - shows modification time
______________________________________________________________________________________________________________

df -h [DIRECTORY] - shows used and free space of directory
-a - all
-T - shows filesystem type
______________________________________________________________________________________________________________

quota -shows disks limits
______________________________________________________________________________________________________________
Partisions:

extended partiotion - container for logical partitions (MBR)
primary partition - in bootable disc, first partiotion in MBR must be primary, max 4 primary partitions (MBR)

fdisk - text program, only MBR partiotion tables
-l -lists disk
fdisk /dev/sda  -edition first disk

Commands:
q   -quit witout saving changes
w   -write changes
p   -print current partition table
F   -check unallocated space
n   -create partition (eg.: +300G)
d   -delete partition
t   -change partition type (not filesystem type!), 83 - Linux, 82 - Linux SWAP

gdisk -text version of fdisk with only GPT support (commands the same)
s   -sort partition numbers

 - - - - - - - - - - - - - - - - - - - - - - - - - -
parted -text programm for MBR & GPT partition tables
gparted -GUI programm for MBR & GPT partition tables

parted /dev/sda -editing disk
select /dev/sdb -changing disk to edit
print       -information about selected disk
print devices  -information about all block devices
print free   -show free space

Creating partition table:
mklabel msdos   -create MBR
mklabel gpt     -create GPT

Creating partiotin:
mkpart [PARTTYPE] [FSTYPE] [START] [END]
eg. 
(parted) mkpart primary ext4 1m 100m

PARTTYPE: primary, logical, extended
FSTYPE: parted will only make a flag, not create the filesystem, here should be SWAP (linux-swap) assigned too
START: beggining of partition in s(sectors), m(megabytes), B(bytes), %
END: end of partition in s(sectors), m(megabytes), B(bytes), %

rm [number] -delete a partiotin with selected number
______________________________________________________________________________________________________________
Filesystems:

mkfs.[TYPE] [PARTITION] -format partition in specific filesystem type, eg.: 
mkfs.ext4 /dev/sdb1
or
mke2fs-t ext4 /dev/sdb1
-L [LABEL]   -add label to partition

ls -l /sbin/mkfs.* -list available filesystem types

tune2fs [PARTITION] [LABEL] -add label to the partition

mount [DEVICE] [MOUNT_POINT] -mounting partition, when is in fstab, only one parameter
unmnount [DEVICE/MOUNT_POINT] -unmounting partition

SWAP:
mkswap /dev/sda2
swapon /dev/sda2

SWAP as file:
dd if=/dev/zero of=myswap bs=1M count=1024
mkswap myswap
Add swap file to /etc/fstab.
______________________________________________________________________________________________________________

Device files:
b -block device. Programs can read data from block devices only in constant size blocks.
c -character device. Works on data strings. Programs can read/write characters from it. Dont have size. 
p -pipe device. Works on strings, but on the end there is another process not device.
s -socket device. Interface to make communication between two processess.
______________________________________________________________________________________________________________

File System Table:
/etc/fstab
[DEVICE] [MOUNT_POINT] [TYPE] [OPTIONS] [DUMP] [FSCK]
______________________________________________________________________________________________________________
dd - read data from file or string and save this data to output file/string. dd copy data in blocks with given size.

dd if=oldFile of=newFile

dd if=/dev/zero of=[OUTPUT_FILE] bs=1024 count=1
/dev/zero - endless string of zeros
conv=ucase  -capitalise texth when copying

dd if=/dev/sda of=backup.dd bs=4096
this command will make abackup of disk and save it in file
______________________________________________________________________________________________________________
BTRFS:
mkfs.btrfs /dev/sdb1

Subvolumes:
btrfs subvolume create /mnt/disk/BKP

Snapshots:
btrfs subvolume snapshot /mnt/disk /mnt/disk/snap
btrfs subvolume show /mnt/disk/BKP/
